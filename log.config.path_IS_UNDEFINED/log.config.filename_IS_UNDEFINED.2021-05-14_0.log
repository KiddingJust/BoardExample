INFO  21-05-14 20:38:29[restartedMain] [BoardExampleApplication:55] - Starting BoardExampleApplication using Java 1.8.0_191 on kiddingui-MacBook-Pro.local with PID 6368 (/Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample/target/classes started by kidding in /Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample)
INFO  21-05-14 20:38:29[restartedMain] [BoardExampleApplication:675] - No active profile set, falling back to default profiles: default
INFO  21-05-14 20:38:30[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  21-05-14 20:38:30[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  21-05-14 20:38:30[restartedMain] [RepositoryConfigurationDelegate:128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  21-05-14 20:38:30[restartedMain] [RepositoryConfigurationDelegate:188] - Finished Spring Data repository scanning in 49 ms. Found 2 JPA repository interfaces.
DEBUG 21-05-14 20:38:31[restartedMain] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-05-14 20:38:31[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  21-05-14 20:38:31[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 20:38:31[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  21-05-14 20:38:31[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
INFO  21-05-14 20:38:32[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  21-05-14 20:38:32[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-05-14 20:38:32[restartedMain] [ServletWebServerApplicationContext:289] - Root WebApplicationContext: initialization completed in 1947 ms
INFO  21-05-14 20:38:32[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  21-05-14 20:38:32[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.4.30.Final
INFO  21-05-14 20:38:32[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  21-05-14 20:38:32[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
DEBUG 21-05-14 20:38:32[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:577)
1. SELECT 1
 {executed in 0 msec}
INFO  21-05-14 20:38:32[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  21-05-14 20:38:32[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
DEBUG 21-05-14 20:38:33[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 20:38:33[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. drop table if exists board
 {executed in 12 msec}
DEBUG 21-05-14 20:38:33[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. drop table if exists member
 {executed in 3 msec}
DEBUG 21-05-14 20:38:33[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. create table board (
       id bigint not null auto_increment,
        created_date datetime,
        modified_date datetime,
        content TEXT not null,
        title varchar(100) not null,
        writer varchar(10) not null,
        primary key (id)
    ) engine=InnoDB
 {executed in 20 msec}
DEBUG 21-05-14 20:38:33[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. create table member (
       mbr_no bigint not null auto_increment,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    ) engine=InnoDB
 {executed in 12 msec}
INFO  21-05-14 20:38:33[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  21-05-14 20:38:33[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 20:38:33[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
WARN  21-05-14 20:38:34[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  21-05-14 20:38:34[restartedMain] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 20:38:34[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  21-05-14 20:38:35[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 20:38:35[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  21-05-14 20:38:35[restartedMain] [BoardExampleApplication:61] - Started BoardExampleApplication in 6.29 seconds (JVM running for 8.167)
INFO  21-05-14 20:38:36[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-05-14 20:38:36[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-05-14 20:38:36[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
DEBUG 21-05-14 20:38:36[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 20:38:36[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_
 {executed in 5 msec}
DEBUG 21-05-14 20:38:47[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 20:38:48[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 20:38:47.987', '05/14/2021 20:38:47.987', '1', '가가가', '1')
 {executed in 8 msec}
DEBUG 21-05-14 20:38:48[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 20:38:47.987', '05/14/2021 20:38:47.987', '1', '가가가', '1')
 {executed in 2 msec}
DEBUG 21-05-14 20:38:48[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 20:38:53[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 20:38:53[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 20:38:53.946', '05/14/2021 20:38:53.946', '2', '나나나', '2')
 {executed in 0 msec}
DEBUG 21-05-14 20:38:53[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 20:38:53.946', '05/14/2021 20:38:53.946', '2', '나나나', '2')
 {executed in 0 msec}
DEBUG 21-05-14 20:38:53[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 20:38:58[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 20:38:58[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 20:38:58.701', '05/14/2021 20:38:58.701', '3', '다다다', '3')
 {executed in 0 msec}
DEBUG 21-05-14 20:38:58[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 20:38:58.701', '05/14/2021 20:38:58.701', '3', '다다다', '3')
 {executed in 0 msec}
DEBUG 21-05-14 20:38:58[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 20:39:04[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 20:39:04[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 20:39:04.246', '05/14/2021 20:39:04.246', '4', '가가가나나', '4')
 {executed in 0 msec}
DEBUG 21-05-14 20:39:04[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 20:39:04.246', '05/14/2021 20:39:04.246', '4', '가가가나나', '4')
 {executed in 0 msec}
DEBUG 21-05-14 20:39:04[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 20:39:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 20:39:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 20:39:11.193', '05/14/2021 20:39:11.193', '5', '가가두개만', '5')
 {executed in 0 msec}
DEBUG 21-05-14 20:39:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 20:39:11.193', '05/14/2021 20:39:11.193', '5', '가가두개만', '5')
 {executed in 0 msec}
DEBUG 21-05-14 20:39:11[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 20:39:14[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 20:39:14[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 where generatedAlias0.title like :param0 escape :param1 */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ where board0_.title like '%가가%' escape '\'
 {executed in 4 msec}
DEBUG 21-05-14 20:39:17[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 20:39:17[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 where generatedAlias0.title like :param0 escape :param1 */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ where board0_.title like '%가가가%' escape '\'
 {executed in 0 msec}
DEBUG 21-05-14 20:39:19[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 20:39:19[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 where generatedAlias0.title like :param0 escape :param1 */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ where board0_.title like '%%' escape '\'
 {executed in 0 msec}
DEBUG 21-05-14 20:39:42[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 20:39:42[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 where generatedAlias0.title like :param0 escape :param1 */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ where board0_.title like '%나나%' escape '\'
 {executed in 0 msec}
INFO  21-05-14 20:44:14[RMI TCP Connection(4)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-05-14 20:44:14[RMI TCP Connection(4)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 20:44:14[RMI TCP Connection(4)-127.0.0.1] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 20:44:14[RMI TCP Connection(4)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-05-14 20:44:14[RMI TCP Connection(4)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-05-14 21:32:24[restartedMain] [BoardExampleApplication:55] - Starting BoardExampleApplication using Java 1.8.0_191 on kiddingui-MacBook-Pro.local with PID 13949 (/Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample/target/classes started by kidding in /Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample)
INFO  21-05-14 21:32:24[restartedMain] [BoardExampleApplication:675] - No active profile set, falling back to default profiles: default
INFO  21-05-14 21:32:24[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  21-05-14 21:32:24[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  21-05-14 21:32:25[restartedMain] [RepositoryConfigurationDelegate:128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  21-05-14 21:32:25[restartedMain] [RepositoryConfigurationDelegate:188] - Finished Spring Data repository scanning in 64 ms. Found 2 JPA repository interfaces.
DEBUG 21-05-14 21:32:25[restartedMain] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-05-14 21:32:25[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  21-05-14 21:32:25[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:32:25[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  21-05-14 21:32:25[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
INFO  21-05-14 21:32:26[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  21-05-14 21:32:26[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-05-14 21:32:26[restartedMain] [ServletWebServerApplicationContext:289] - Root WebApplicationContext: initialization completed in 1992 ms
INFO  21-05-14 21:32:26[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  21-05-14 21:32:26[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.4.30.Final
INFO  21-05-14 21:32:26[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  21-05-14 21:32:26[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
DEBUG 21-05-14 21:32:26[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:577)
1. SELECT 1
 {executed in 0 msec}
INFO  21-05-14 21:32:26[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  21-05-14 21:32:26[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
DEBUG 21-05-14 21:32:27[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:32:27[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. drop table if exists board
 {executed in 5 msec}
DEBUG 21-05-14 21:32:27[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. drop table if exists member
 {executed in 2 msec}
DEBUG 21-05-14 21:32:27[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. create table board (
       id bigint not null auto_increment,
        created_date datetime,
        modified_date datetime,
        content TEXT not null,
        title varchar(100) not null,
        writer varchar(10) not null,
        primary key (id)
    ) engine=InnoDB
 {executed in 13 msec}
DEBUG 21-05-14 21:32:27[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. create table member (
       mbr_no bigint not null auto_increment,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    ) engine=InnoDB
 {executed in 12 msec}
INFO  21-05-14 21:32:27[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  21-05-14 21:32:27[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:32:27[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
WARN  21-05-14 21:32:27[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  21-05-14 21:32:28[restartedMain] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:32:28[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  21-05-14 21:32:28[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:32:28[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  21-05-14 21:32:28[restartedMain] [BoardExampleApplication:61] - Started BoardExampleApplication in 4.9 seconds (JVM running for 6.049)
INFO  21-05-14 21:36:13[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-05-14 21:36:13[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-05-14 21:36:13[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
DEBUG 21-05-14 21:36:13[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:36:13[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 7 msec}
DEBUG 21-05-14 21:36:13[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 2 msec}
DEBUG 21-05-14 21:36:24[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:36:24[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:24.310', '05/14/2021 21:36:24.310', 'aa', 'aaa', 'aa')
 {executed in 1 msec}
DEBUG 21-05-14 21:36:24[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:24.310', '05/14/2021 21:36:24.310', 'aa', 'aaa', 'aa')
 {executed in 1 msec}
DEBUG 21-05-14 21:36:24[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:36:24[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:36:28[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:36:28[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:28.777', '05/14/2021 21:36:28.777', 'ccc', 'aa', 'bb')
 {executed in 1 msec}
DEBUG 21-05-14 21:36:28[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:28.777', '05/14/2021 21:36:28.777', 'ccc', 'aa', 'bb')
 {executed in 0 msec}
DEBUG 21-05-14 21:36:28[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:36:28[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:36:32[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:36:32[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:32.721', '05/14/2021 21:36:32.721', 'sdf', 'sdfasf', 'asdf')
 {executed in 0 msec}
DEBUG 21-05-14 21:36:32[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:32.721', '05/14/2021 21:36:32.721', 'sdf', 'sdfasf', 'asdf')
 {executed in 0 msec}
DEBUG 21-05-14 21:36:32[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:36:32[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:36:36[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:36:36[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:36.864', '05/14/2021 21:36:36.864', 'asdf', 'sfaf', 'sdfaf')
 {executed in 2 msec}
DEBUG 21-05-14 21:36:36[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:36.864', '05/14/2021 21:36:36.864', 'asdf', 'sfaf', 'sdfaf')
 {executed in 0 msec}
DEBUG 21-05-14 21:36:36[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:36:36[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:36:36[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:36:41[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:36:41[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:41.400', '05/14/2021 21:36:41.400', 'vfvv', 'dfgfdg', 'fg')
 {executed in 1 msec}
DEBUG 21-05-14 21:36:41[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:41.400', '05/14/2021 21:36:41.400', 'vfvv', 'dfgfdg', 'fg')
 {executed in 0 msec}
DEBUG 21-05-14 21:36:41[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:36:41[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:36:41[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:36:46[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:36:46[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:46.687', '05/14/2021 21:36:46.687', 'ssdf', 'qfcv', 'qefef')
 {executed in 1 msec}
DEBUG 21-05-14 21:36:46[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:46.687', '05/14/2021 21:36:46.687', 'ssdf', 'qfcv', 'qefef')
 {executed in 0 msec}
DEBUG 21-05-14 21:36:46[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:36:46[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:36:46[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:36:51[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:36:51[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:51.212', '05/14/2021 21:36:51.212', 'qqq', 'dfsf', 'dfsf')
 {executed in 0 msec}
DEBUG 21-05-14 21:36:51[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:51.212', '05/14/2021 21:36:51.212', 'qqq', 'dfsf', 'dfsf')
 {executed in 0 msec}
DEBUG 21-05-14 21:36:51[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:36:51[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:36:51[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:36:55[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:36:55[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:55.518', '05/14/2021 21:36:55.518', '5', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:36:55[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:36:55.518', '05/14/2021 21:36:55.518', '5', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:36:55[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:36:55[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:36:55[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:36:58[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:36:58[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:36:58[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:36:58[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:36:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:36:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:36:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:36:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:00[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:37:00[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:37:00[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:00[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:01[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:37:01[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:37:01[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:01[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:12[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:37:12[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:12.961', '05/14/2021 21:37:12.961', '당연히', '순서가이상해', '이게제일앞아닌가')
 {executed in 1 msec}
DEBUG 21-05-14 21:37:12[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:12.961', '05/14/2021 21:37:12.961', '당연히', '순서가이상해', '이게제일앞아닌가')
 {executed in 0 msec}
DEBUG 21-05-14 21:37:12[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:37:12[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:12[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:14[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:37:14[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 8, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:37:14[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:15[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 3 msec}
DEBUG 21-05-14 21:37:15[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:37:15[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:15[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:17[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:37:17[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:37:17[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 3 msec}
DEBUG 21-05-14 21:37:17[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 2 msec}
DEBUG 21-05-14 21:37:17[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:37:17[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:37:17[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:17[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:18[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:37:18[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 8, 4
 {executed in 0 msec}
DEBUG 21-05-14 21:37:18[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:25[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:37:25[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:25.016', '05/14/2021 21:37:25.016', 'ㅁㄹㅇㄴㄹ', '일단', '5개')
 {executed in 1 msec}
DEBUG 21-05-14 21:37:25[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:25.016', '05/14/2021 21:37:25.016', 'ㅁㄹㅇㄴㄹ', '일단', '5개')
 {executed in 0 msec}
DEBUG 21-05-14 21:37:25[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:37:25[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:25[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:29[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
ERROR 21-05-14 21:37:29[http-nio-8080-exec-3] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:29.990', '05/14/2021 21:37:29.990', 'ㄹㄹㅇㅇㄹㄹㅁ', 'ㄹㅍㅍ', 'ㄴㄴㅇㅇㄹㄹㅇㅇㄴㄴㄹ')
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=19) Data too long for column 'writer' at row 1
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:153)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:274)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:229)
	at org.mariadb.jdbc.ClientSidePreparedStatement.execute(ClientSidePreparedStatement.java:149)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeUpdate(ClientSidePreparedStatement.java:181)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3195)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3801)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at sun.reflect.GeneratedMethodAccessor81.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy99.persist(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor81.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy99.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at org.gaiga.service.BoardService.savePost(BoardService.java:38)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.savePost(<generated>)
	at org.gaiga.controller.BoardController.write(BoardController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Data too long for column 'writer' at row 1
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:192)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:175)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:319)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:220)
	... 132 common frames omitted
Caused by: java.sql.SQLException: Data too long for column 'writer' at row 1
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1681)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1543)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1506)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:316)
	... 133 common frames omitted
WARN  21-05-14 21:37:30[http-nio-8080-exec-3] [SqlExceptionHelper:137] - SQL Error: 1406, SQLState: 22001
ERROR 21-05-14 21:37:30[http-nio-8080-exec-3] [SqlExceptionHelper:142] - (conn=19) Data too long for column 'writer' at row 1
ERROR 21-05-14 21:37:30[http-nio-8080-exec-3] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement] with root cause
java.sql.SQLException: Data too long for column 'writer' at row 1
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1681)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1543)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1506)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:316)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:220)
	at org.mariadb.jdbc.ClientSidePreparedStatement.execute(ClientSidePreparedStatement.java:149)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeUpdate(ClientSidePreparedStatement.java:181)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3195)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3801)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at sun.reflect.GeneratedMethodAccessor81.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy99.persist(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor81.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy99.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at org.gaiga.service.BoardService.savePost(BoardService.java:38)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.savePost(<generated>)
	at org.gaiga.controller.BoardController.write(BoardController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
DEBUG 21-05-14 21:37:34[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
ERROR 21-05-14 21:37:34[http-nio-8080-exec-4] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:34.366', '05/14/2021 21:37:34.366', 'ㄹㄹㅇㅇㄹㄹㅁ', 'ㄹㅍㅍ', 'ㄴㄴㅇㅇㄹㄹㅇㅇㄴㄴㄹ')
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=19) Data too long for column 'writer' at row 1
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:153)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:274)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:229)
	at org.mariadb.jdbc.ClientSidePreparedStatement.execute(ClientSidePreparedStatement.java:149)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeUpdate(ClientSidePreparedStatement.java:181)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3195)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3801)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at sun.reflect.GeneratedMethodAccessor81.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy99.persist(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor81.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy99.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at org.gaiga.service.BoardService.savePost(BoardService.java:38)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.savePost(<generated>)
	at org.gaiga.controller.BoardController.write(BoardController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Data too long for column 'writer' at row 1
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:192)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:175)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:319)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:220)
	... 132 common frames omitted
Caused by: java.sql.SQLException: Data too long for column 'writer' at row 1
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1681)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1543)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1506)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:316)
	... 133 common frames omitted
WARN  21-05-14 21:37:34[http-nio-8080-exec-4] [SqlExceptionHelper:137] - SQL Error: 1406, SQLState: 22001
ERROR 21-05-14 21:37:34[http-nio-8080-exec-4] [SqlExceptionHelper:142] - (conn=19) Data too long for column 'writer' at row 1
ERROR 21-05-14 21:37:34[http-nio-8080-exec-4] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement] with root cause
java.sql.SQLException: Data too long for column 'writer' at row 1
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1681)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1543)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1506)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:316)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:220)
	at org.mariadb.jdbc.ClientSidePreparedStatement.execute(ClientSidePreparedStatement.java:149)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeUpdate(ClientSidePreparedStatement.java:181)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3195)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3801)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at sun.reflect.GeneratedMethodAccessor81.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy99.persist(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor81.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy99.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at org.gaiga.service.BoardService.savePost(BoardService.java:38)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.savePost(<generated>)
	at org.gaiga.controller.BoardController.write(BoardController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
DEBUG 21-05-14 21:37:37[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:37:37[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:37.812', '05/14/2021 21:37:37.812', 'ㄹㄹㅇㅇㄹㄹㅁ', 'ㄹㅍㅍ', 'ㄴㅇㄹㄹ')
 {executed in 1 msec}
DEBUG 21-05-14 21:37:37[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:37.812', '05/14/2021 21:37:37.812', 'ㄹㄹㅇㅇㄹㄹㅁ', 'ㄹㅍㅍ', 'ㄴㅇㄹㄹ')
 {executed in 0 msec}
DEBUG 21-05-14 21:37:37[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:37:37[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:37[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:44[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:37:44[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:44.535', '05/14/2021 21:37:44.535', 'fndf', 'afad', 'fnf')
 {executed in 0 msec}
DEBUG 21-05-14 21:37:44[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:44.535', '05/14/2021 21:37:44.535', 'fndf', 'afad', 'fnf')
 {executed in 0 msec}
DEBUG 21-05-14 21:37:44[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:37:44[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:44[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:48[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:37:48[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:48.709', '05/14/2021 21:37:48.709', 'db', 'dkf', 'fjdf')
 {executed in 4 msec}
DEBUG 21-05-14 21:37:48[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:48.709', '05/14/2021 21:37:48.709', 'db', 'dkf', 'fjdf')
 {executed in 0 msec}
DEBUG 21-05-14 21:37:48[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:37:48[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:48[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:37:53[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:37:53[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:53.120', '05/14/2021 21:37:53.120', 'fjdf', 'sf', 'fjvv')
 {executed in 1 msec}
DEBUG 21-05-14 21:37:53[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:53.120', '05/14/2021 21:37:53.120', 'fjdf', 'sf', 'fjvv')
 {executed in 0 msec}
DEBUG 21-05-14 21:37:53[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:37:53[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:53[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:59[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:37:59[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:59.449', '05/14/2021 21:37:59.449', '42', '11', 'fdf')
 {executed in 1 msec}
DEBUG 21-05-14 21:37:59[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:37:59.449', '05/14/2021 21:37:59.449', '42', '11', 'fdf')
 {executed in 0 msec}
DEBUG 21-05-14 21:37:59[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:37:59[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:37:59[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:38:04[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:38:04[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:04.455', '05/14/2021 21:38:04.455', 'aa', 'aa', 'aa')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:04[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:04.455', '05/14/2021 21:38:04.455', 'aa', 'aa', 'aa')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:04[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:38:04[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:38:04[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:38:08[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:38:08[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:08.783', '05/14/2021 21:38:08.783', 'bb', 'bb', 'bb')
 {executed in 1 msec}
DEBUG 21-05-14 21:38:08[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:08.783', '05/14/2021 21:38:08.783', 'bb', 'bb', 'bb')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:08[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:38:08[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:38:08[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:38:12[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:38:12[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:12.079', '05/14/2021 21:38:12.079', 'cc', 'cc', 'cc')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:12[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:12.079', '05/14/2021 21:38:12.079', 'cc', 'cc', 'cc')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:12[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:38:12[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:38:12[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:38:15[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:38:15[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:15.936', '05/14/2021 21:38:15.936', 'dd', 'dd', 'dd')
 {executed in 1 msec}
DEBUG 21-05-14 21:38:15[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:15.936', '05/14/2021 21:38:15.936', 'dd', 'dd', 'dd')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:15[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:38:15[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:38:15[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:38:19[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:38:19[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:19.347', '05/14/2021 21:38:19.347', 'ee', 'ee', 'ee')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:19[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:19.347', '05/14/2021 21:38:19.347', 'ee', 'ee', 'ee')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:19[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:38:19[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:38:19[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:38:24[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:38:24[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:24.302', '05/14/2021 21:38:24.302', 'fffff', 'ff', 'ff')
 {executed in 1 msec}
DEBUG 21-05-14 21:38:24[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:24.302', '05/14/2021 21:38:24.302', 'fffff', 'ff', 'ff')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:38:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:38:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
ERROR 21-05-14 21:38:24[http-nio-8080-exec-6] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 5] with root cause
java.lang.ArrayIndexOutOfBoundsException: 5
	at org.gaiga.service.BoardService.getPageList(BoardService.java:108)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.getPageList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:40)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
DEBUG 21-05-14 21:38:28[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:38:28[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:28.060', '05/14/2021 21:38:28.060', 'ffffg', 'ff', 'ff')
 {executed in 1 msec}
DEBUG 21-05-14 21:38:28[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:28.060', '05/14/2021 21:38:28.060', 'ffffg', 'ff', 'ff')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:28[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:38:28[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:38:28[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
ERROR 21-05-14 21:38:28[http-nio-8080-exec-9] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 5] with root cause
java.lang.ArrayIndexOutOfBoundsException: 5
	at org.gaiga.service.BoardService.getPageList(BoardService.java:108)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.getPageList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:40)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
DEBUG 21-05-14 21:38:45[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:38:45[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:45.230', '05/14/2021 21:38:45.230', '안되지', '음', '왜')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:45[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:38:45.230', '05/14/2021 21:38:45.230', '안되지', '음', '왜')
 {executed in 0 msec}
DEBUG 21-05-14 21:38:45[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:38:45[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 2 msec}
DEBUG 21-05-14 21:38:45[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
ERROR 21-05-14 21:38:45[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 5] with root cause
java.lang.ArrayIndexOutOfBoundsException: 5
	at org.gaiga.service.BoardService.getPageList(BoardService.java:108)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.getPageList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:40)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
DEBUG 21-05-14 21:39:30[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:39:30[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 8, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:39:30[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:39:30[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
ERROR 21-05-14 21:39:30[http-nio-8080-exec-4] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 5] with root cause
java.lang.ArrayIndexOutOfBoundsException: 5
	at org.gaiga.service.BoardService.getPageList(BoardService.java:108)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.getPageList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:40)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
DEBUG 21-05-14 21:39:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:39:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 8, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:39:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:39:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
ERROR 21-05-14 21:39:45[http-nio-8080-exec-7] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 5] with root cause
java.lang.ArrayIndexOutOfBoundsException: 5
	at org.gaiga.service.BoardService.getPageList(BoardService.java:108)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.getPageList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:40)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
DEBUG 21-05-14 21:39:48[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:39:48[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:39:48[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 2 msec}
DEBUG 21-05-14 21:39:48[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
ERROR 21-05-14 21:39:48[http-nio-8080-exec-8] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 5] with root cause
java.lang.ArrayIndexOutOfBoundsException: 5
	at org.gaiga.service.BoardService.getPageList(BoardService.java:108)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.getPageList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:40)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
DEBUG 21-05-14 21:39:50[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:39:50[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate asc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date asc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:39:50[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:39:50[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
ERROR 21-05-14 21:39:50[http-nio-8080-exec-9] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 5] with root cause
java.lang.ArrayIndexOutOfBoundsException: 5
	at org.gaiga.service.BoardService.getPageList(BoardService.java:108)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.getPageList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:40)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
DEBUG 21-05-14 21:39:51[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
ERROR 21-05-14 21:39:51[http-nio-8080-exec-10] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Page index must not be less than zero!] with root cause
java.lang.IllegalArgumentException: Page index must not be less than zero!
	at org.springframework.data.domain.AbstractPageRequest.<init>(AbstractPageRequest.java:44)
	at org.springframework.data.domain.PageRequest.<init>(PageRequest.java:43)
	at org.springframework.data.domain.PageRequest.of(PageRequest.java:70)
	at org.gaiga.service.BoardService.getBoardList(BoardService.java:72)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$5381b340.getBoardList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:39)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  21-05-14 21:42:30[Thread-6] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:42:30[Thread-6] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:42:30[Thread-6] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-05-14 21:42:30[Thread-6] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-05-14 21:42:30[restartedMain] [BoardExampleApplication:55] - Starting BoardExampleApplication using Java 1.8.0_191 on kiddingui-MacBook-Pro.local with PID 13949 (/Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample/target/classes started by kidding in /Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample)
INFO  21-05-14 21:42:30[restartedMain] [BoardExampleApplication:675] - No active profile set, falling back to default profiles: default
INFO  21-05-14 21:42:31[restartedMain] [RepositoryConfigurationDelegate:128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  21-05-14 21:42:31[restartedMain] [RepositoryConfigurationDelegate:188] - Finished Spring Data repository scanning in 19 ms. Found 2 JPA repository interfaces.
INFO  21-05-14 21:42:31[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  21-05-14 21:42:31[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:42:31[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  21-05-14 21:42:31[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
INFO  21-05-14 21:42:31[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  21-05-14 21:42:31[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-05-14 21:42:31[restartedMain] [ServletWebServerApplicationContext:289] - Root WebApplicationContext: initialization completed in 517 ms
INFO  21-05-14 21:42:31[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  21-05-14 21:42:31[restartedMain] [HikariDataSource:110] - HikariPool-2 - Starting...
DEBUG 21-05-14 21:42:31[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:577)
11. SELECT 1
 {executed in 0 msec}
INFO  21-05-14 21:42:31[restartedMain] [HikariDataSource:123] - HikariPool-2 - Start completed.
INFO  21-05-14 21:42:31[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
DEBUG 21-05-14 21:42:31[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. drop table if exists board
 {executed in 5 msec}
DEBUG 21-05-14 21:42:31[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. drop table if exists member
 {executed in 2 msec}
DEBUG 21-05-14 21:42:31[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. create table board (
       id bigint not null auto_increment,
        created_date datetime,
        modified_date datetime,
        content TEXT not null,
        title varchar(100) not null,
        writer varchar(10) not null,
        primary key (id)
    ) engine=InnoDB
 {executed in 11 msec}
DEBUG 21-05-14 21:42:31[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. create table member (
       mbr_no bigint not null auto_increment,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    ) engine=InnoDB
 {executed in 10 msec}
INFO  21-05-14 21:42:31[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  21-05-14 21:42:31[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:42:31[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
WARN  21-05-14 21:42:31[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  21-05-14 21:42:31[restartedMain] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:42:31[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  21-05-14 21:42:31[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:42:31[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  21-05-14 21:42:31[restartedMain] [BoardExampleApplication:61] - Started BoardExampleApplication in 1.083 seconds (JVM running for 609.343)
INFO  21-05-14 21:42:31[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  21-05-14 21:42:33[RMI TCP Connection(5)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-05-14 21:42:33[RMI TCP Connection(5)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:42:33[RMI TCP Connection(5)-127.0.0.1] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:42:33[RMI TCP Connection(5)-127.0.0.1] [HikariDataSource:350] - HikariPool-2 - Shutdown initiated...
INFO  21-05-14 21:42:33[RMI TCP Connection(5)-127.0.0.1] [HikariDataSource:352] - HikariPool-2 - Shutdown completed.
INFO  21-05-14 21:42:36[restartedMain] [BoardExampleApplication:55] - Starting BoardExampleApplication using Java 1.8.0_191 on kiddingui-MacBook-Pro.local with PID 15081 (/Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample/target/classes started by kidding in /Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample)
INFO  21-05-14 21:42:36[restartedMain] [BoardExampleApplication:675] - No active profile set, falling back to default profiles: default
INFO  21-05-14 21:42:36[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  21-05-14 21:42:36[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  21-05-14 21:42:37[restartedMain] [RepositoryConfigurationDelegate:128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  21-05-14 21:42:37[restartedMain] [RepositoryConfigurationDelegate:188] - Finished Spring Data repository scanning in 62 ms. Found 2 JPA repository interfaces.
DEBUG 21-05-14 21:42:37[restartedMain] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-05-14 21:42:38[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  21-05-14 21:42:38[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:42:38[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  21-05-14 21:42:38[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
INFO  21-05-14 21:42:38[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  21-05-14 21:42:38[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-05-14 21:42:38[restartedMain] [ServletWebServerApplicationContext:289] - Root WebApplicationContext: initialization completed in 2177 ms
INFO  21-05-14 21:42:38[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  21-05-14 21:42:38[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.4.30.Final
INFO  21-05-14 21:42:39[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  21-05-14 21:42:39[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
DEBUG 21-05-14 21:42:39[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:577)
1. SELECT 1
 {executed in 1 msec}
INFO  21-05-14 21:42:39[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  21-05-14 21:42:39[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
DEBUG 21-05-14 21:42:40[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:42:40[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. drop table if exists board
 {executed in 3 msec}
DEBUG 21-05-14 21:42:40[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. drop table if exists member
 {executed in 2 msec}
DEBUG 21-05-14 21:42:40[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. create table board (
       id bigint not null auto_increment,
        created_date datetime,
        modified_date datetime,
        content TEXT not null,
        title varchar(100) not null,
        writer varchar(10) not null,
        primary key (id)
    ) engine=InnoDB
 {executed in 12 msec}
DEBUG 21-05-14 21:42:40[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. create table member (
       mbr_no bigint not null auto_increment,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    ) engine=InnoDB
 {executed in 16 msec}
INFO  21-05-14 21:42:40[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  21-05-14 21:42:40[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:42:40[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
WARN  21-05-14 21:42:40[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  21-05-14 21:42:41[restartedMain] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:42:41[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  21-05-14 21:42:41[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:42:41[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  21-05-14 21:42:41[restartedMain] [BoardExampleApplication:61] - Started BoardExampleApplication in 6.217 seconds (JVM running for 7.494)
INFO  21-05-14 21:42:48[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-05-14 21:42:48[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-05-14 21:42:48[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
DEBUG 21-05-14 21:42:48[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:42:48[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 3 msec}
DEBUG 21-05-14 21:42:48[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:42:53[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:42:53[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:42:53[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:00[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:43:00[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:00.106', '05/14/2021 21:43:00.106', '1', '11', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:00[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:00.106', '05/14/2021 21:43:00.106', '1', '11', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:00[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:43:00[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:43:05[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:43:05[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:05.687', '05/14/2021 21:43:05.687', '2', '2', '2')
 {executed in 2 msec}
DEBUG 21-05-14 21:43:05[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:05.687', '05/14/2021 21:43:05.687', '2', '2', '2')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:05[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:43:05[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:09[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:43:09[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:09.545', '05/14/2021 21:43:09.545', '3', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:09[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:09.545', '05/14/2021 21:43:09.545', '3', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:09[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:43:09[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:13[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:43:13[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:13.069', '05/14/2021 21:43:13.069', '4', '4', '4')
 {executed in 1 msec}
DEBUG 21-05-14 21:43:13[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:13.069', '05/14/2021 21:43:13.069', '4', '4', '4')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:13[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:43:13[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:43:13[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:18[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:43:18[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:18.007', '05/14/2021 21:43:18.007', '5', '5', '5')
 {executed in 1 msec}
DEBUG 21-05-14 21:43:18[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:18.007', '05/14/2021 21:43:18.007', '5', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:18[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:43:18[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 2 msec}
DEBUG 21-05-14 21:43:18[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:43:21[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:43:21[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:43:21[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:43:21[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:43:23[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:43:23[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4, 4
 {executed in 0 msec}
DEBUG 21-05-14 21:43:23[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:32[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:43:32[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:32.280', '05/14/2021 21:43:32.280', '6', '6', '6')
 {executed in 1 msec}
DEBUG 21-05-14 21:43:32[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:32.280', '05/14/2021 21:43:32.280', '6', '6', '6')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:43:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:43:36[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:43:36[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:36.379', '05/14/2021 21:43:36.379', '7', '7', '7')
 {executed in 1 msec}
DEBUG 21-05-14 21:43:36[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:36.379', '05/14/2021 21:43:36.379', '7', '7', '7')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:36[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:43:36[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:43:36[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:43:39[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:43:39[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:39.778', '05/14/2021 21:43:39.778', '8', '8', '8')
 {executed in 1 msec}
DEBUG 21-05-14 21:43:39[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:39.778', '05/14/2021 21:43:39.778', '8', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:39[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:43:39[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:39[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:43:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:44.244', '05/14/2021 21:43:44.244', '9', '9', '9')
 {executed in 1 msec}
DEBUG 21-05-14 21:43:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:44.244', '05/14/2021 21:43:44.244', '9', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:44[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:43:44[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:43:44[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:48[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:43:48[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:48.359', '05/14/2021 21:43:48.359', '10', '10', '10')
 {executed in 1 msec}
DEBUG 21-05-14 21:43:48[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:48.359', '05/14/2021 21:43:48.359', '10', '10', '10')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:48[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:43:48[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:48[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:52[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:43:52[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:52.171', '05/14/2021 21:43:52.171', '1', '1', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:52[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:52.171', '05/14/2021 21:43:52.171', '1', '1', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:43:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 2 msec}
DEBUG 21-05-14 21:43:55[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:43:55[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:55.957', '05/14/2021 21:43:55.957', '2', '2', '2')
 {executed in 1 msec}
DEBUG 21-05-14 21:43:55[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:55.957', '05/14/2021 21:43:55.957', '2', '2', '2')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:55[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:43:55[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:55[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:43:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:59.077', '05/14/2021 21:43:59.077', '3', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:43:59.077', '05/14/2021 21:43:59.077', '3', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:43:59[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:43:59[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:43:59[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:44:02[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 3 msec}
DEBUG 21-05-14 21:44:02[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:02.408', '05/14/2021 21:44:02.408', '4', '4', '4')
 {executed in 1 msec}
DEBUG 21-05-14 21:44:02[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:02.408', '05/14/2021 21:44:02.408', '4', '4', '4')
 {executed in 0 msec}
DEBUG 21-05-14 21:44:02[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:44:02[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:44:02[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:44:04[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:44:04[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:04.975', '05/14/2021 21:44:04.975', '5', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:44:04[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:04.975', '05/14/2021 21:44:04.975', '5', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:44:04[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:44:05[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 2 msec}
DEBUG 21-05-14 21:44:05[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:44:07[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:44:07[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:07.844', '05/14/2021 21:44:07.844', '6', '6', '6')
 {executed in 2 msec}
DEBUG 21-05-14 21:44:07[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:07.844', '05/14/2021 21:44:07.844', '6', '6', '6')
 {executed in 0 msec}
DEBUG 21-05-14 21:44:07[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:44:07[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 3 msec}
DEBUG 21-05-14 21:44:07[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:44:10[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:44:10[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:10.946', '05/14/2021 21:44:10.946', '7', '7', '7')
 {executed in 1 msec}
DEBUG 21-05-14 21:44:10[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:10.946', '05/14/2021 21:44:10.946', '7', '7', '7')
 {executed in 0 msec}
DEBUG 21-05-14 21:44:10[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:44:10[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:44:10[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:44:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:44:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:14.183', '05/14/2021 21:44:14.183', '8', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:44:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:14.183', '05/14/2021 21:44:14.183', '8', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:44:14[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:44:14[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:44:14[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:44:17[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:44:17[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:17.269', '05/14/2021 21:44:17.269', '9', '9', '9')
 {executed in 1 msec}
DEBUG 21-05-14 21:44:17[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:17.269', '05/14/2021 21:44:17.269', '9', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:44:17[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:44:17[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:44:17[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:44:23[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:44:23[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:23.193', '05/14/2021 21:44:23.193', '10', '10', '10')
 {executed in 2 msec}
DEBUG 21-05-14 21:44:23[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:23.193', '05/14/2021 21:44:23.193', '10', '10', '10')
 {executed in 0 msec}
DEBUG 21-05-14 21:44:23[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:44:23[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:44:23[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:44:25[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:44:25[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:25.974', '05/14/2021 21:44:25.974', '1', '1', '1')
 {executed in 1 msec}
DEBUG 21-05-14 21:44:25[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:44:25.974', '05/14/2021 21:44:25.974', '1', '1', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:44:25[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:44:25[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:44:25[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
ERROR 21-05-14 21:44:26[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 5] with root cause
java.lang.ArrayIndexOutOfBoundsException: 5
	at org.gaiga.service.BoardService.getPageList(BoardService.java:110)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$6f7be2af.getPageList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:40)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
DEBUG 21-05-14 21:44:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:44:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 2 msec}
DEBUG 21-05-14 21:44:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:44:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
ERROR 21-05-14 21:44:42[http-nio-8080-exec-4] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 5] with root cause
java.lang.ArrayIndexOutOfBoundsException: 5
	at org.gaiga.service.BoardService.getPageList(BoardService.java:110)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$6f7be2af.getPageList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:40)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  21-05-14 21:45:45[Thread-6] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:45:45[Thread-6] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:45:45[Thread-6] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-05-14 21:45:45[Thread-6] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-05-14 21:45:46[restartedMain] [BoardExampleApplication:55] - Starting BoardExampleApplication using Java 1.8.0_191 on kiddingui-MacBook-Pro.local with PID 15081 (/Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample/target/classes started by kidding in /Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample)
INFO  21-05-14 21:45:46[restartedMain] [BoardExampleApplication:675] - No active profile set, falling back to default profiles: default
INFO  21-05-14 21:45:46[restartedMain] [RepositoryConfigurationDelegate:128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  21-05-14 21:45:46[restartedMain] [RepositoryConfigurationDelegate:188] - Finished Spring Data repository scanning in 16 ms. Found 2 JPA repository interfaces.
INFO  21-05-14 21:45:47[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  21-05-14 21:45:47[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:45:47[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  21-05-14 21:45:47[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
INFO  21-05-14 21:45:47[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  21-05-14 21:45:47[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-05-14 21:45:47[restartedMain] [ServletWebServerApplicationContext:289] - Root WebApplicationContext: initialization completed in 692 ms
INFO  21-05-14 21:45:47[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  21-05-14 21:45:47[restartedMain] [HikariDataSource:110] - HikariPool-2 - Starting...
DEBUG 21-05-14 21:45:47[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:577)
11. SELECT 1
 {executed in 1 msec}
INFO  21-05-14 21:45:47[restartedMain] [HikariDataSource:123] - HikariPool-2 - Start completed.
INFO  21-05-14 21:45:47[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
DEBUG 21-05-14 21:45:47[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. drop table if exists board
 {executed in 3 msec}
DEBUG 21-05-14 21:45:47[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. drop table if exists member
 {executed in 2 msec}
DEBUG 21-05-14 21:45:47[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. create table board (
       id bigint not null auto_increment,
        created_date datetime,
        modified_date datetime,
        content TEXT not null,
        title varchar(100) not null,
        writer varchar(10) not null,
        primary key (id)
    ) engine=InnoDB
 {executed in 15 msec}
DEBUG 21-05-14 21:45:47[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. create table member (
       mbr_no bigint not null auto_increment,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    ) engine=InnoDB
 {executed in 9 msec}
INFO  21-05-14 21:45:47[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  21-05-14 21:45:47[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:45:47[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
WARN  21-05-14 21:45:47[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  21-05-14 21:45:47[restartedMain] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:45:47[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  21-05-14 21:45:47[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:45:47[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  21-05-14 21:45:47[restartedMain] [BoardExampleApplication:61] - Started BoardExampleApplication in 1.291 seconds (JVM running for 193.17)
INFO  21-05-14 21:45:47[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  21-05-14 21:46:06[RMI TCP Connection(5)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-05-14 21:46:06[RMI TCP Connection(5)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:46:06[RMI TCP Connection(5)-127.0.0.1] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:46:06[RMI TCP Connection(5)-127.0.0.1] [HikariDataSource:350] - HikariPool-2 - Shutdown initiated...
INFO  21-05-14 21:46:06[RMI TCP Connection(5)-127.0.0.1] [HikariDataSource:352] - HikariPool-2 - Shutdown completed.
INFO  21-05-14 21:46:09[restartedMain] [BoardExampleApplication:55] - Starting BoardExampleApplication using Java 1.8.0_191 on kiddingui-MacBook-Pro.local with PID 15458 (/Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample/target/classes started by kidding in /Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample)
INFO  21-05-14 21:46:09[restartedMain] [BoardExampleApplication:675] - No active profile set, falling back to default profiles: default
INFO  21-05-14 21:46:09[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  21-05-14 21:46:09[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  21-05-14 21:46:11[restartedMain] [RepositoryConfigurationDelegate:128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  21-05-14 21:46:11[restartedMain] [RepositoryConfigurationDelegate:188] - Finished Spring Data repository scanning in 74 ms. Found 2 JPA repository interfaces.
DEBUG 21-05-14 21:46:11[restartedMain] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-05-14 21:46:12[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  21-05-14 21:46:12[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:46:12[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  21-05-14 21:46:12[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
INFO  21-05-14 21:46:12[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  21-05-14 21:46:12[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-05-14 21:46:12[restartedMain] [ServletWebServerApplicationContext:289] - Root WebApplicationContext: initialization completed in 3145 ms
INFO  21-05-14 21:46:13[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  21-05-14 21:46:13[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.4.30.Final
INFO  21-05-14 21:46:13[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  21-05-14 21:46:13[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
DEBUG 21-05-14 21:46:13[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:577)
1. SELECT 1
 {executed in 0 msec}
INFO  21-05-14 21:46:13[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  21-05-14 21:46:13[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
DEBUG 21-05-14 21:46:14[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:46:14[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. drop table if exists board
 {executed in 2 msec}
DEBUG 21-05-14 21:46:14[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. drop table if exists member
 {executed in 2 msec}
DEBUG 21-05-14 21:46:14[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. create table board (
       id bigint not null auto_increment,
        created_date datetime,
        modified_date datetime,
        content TEXT not null,
        title varchar(100) not null,
        writer varchar(10) not null,
        primary key (id)
    ) engine=InnoDB
 {executed in 19 msec}
DEBUG 21-05-14 21:46:14[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. create table member (
       mbr_no bigint not null auto_increment,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    ) engine=InnoDB
 {executed in 14 msec}
INFO  21-05-14 21:46:14[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  21-05-14 21:46:14[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:46:14[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
WARN  21-05-14 21:46:15[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  21-05-14 21:46:15[restartedMain] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:46:16[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  21-05-14 21:46:16[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:46:16[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  21-05-14 21:46:16[restartedMain] [BoardExampleApplication:61] - Started BoardExampleApplication in 7.333 seconds (JVM running for 9.076)
INFO  21-05-14 21:46:16[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-05-14 21:46:16[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-05-14 21:46:16[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
DEBUG 21-05-14 21:46:16[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:46:17[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:46:17[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:46:18[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:46:18[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:46:18[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:46:20[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:46:21[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:21.010', '05/14/2021 21:46:21.010', '', '1', '1')
 {executed in 1 msec}
DEBUG 21-05-14 21:46:21[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:21.010', '05/14/2021 21:46:21.010', '', '1', '1')
 {executed in 1 msec}
DEBUG 21-05-14 21:46:21[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:46:21[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:46:26[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:46:26[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:26.371', '05/14/2021 21:46:26.371', '2
', '2', '2')
 {executed in 1 msec}
DEBUG 21-05-14 21:46:26[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:26.371', '05/14/2021 21:46:26.371', '2
', '2', '2')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:26[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:46:26[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:46:29[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 6 msec}
DEBUG 21-05-14 21:46:29[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:29.654', '05/14/2021 21:46:29.654', '3', '3', '3')
 {executed in 1 msec}
DEBUG 21-05-14 21:46:29[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:29.654', '05/14/2021 21:46:29.654', '3', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:29[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 2 msec}
DEBUG 21-05-14 21:46:29[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:46:32[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:46:32[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:32.641', '05/14/2021 21:46:32.641', '4', '4', '4')
 {executed in 1 msec}
DEBUG 21-05-14 21:46:32[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:32.641', '05/14/2021 21:46:32.641', '4', '4', '4')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:32[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:46:32[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:46:32[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:46:35[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:46:35[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:35.530', '05/14/2021 21:46:35.530', '', '5', '5')
 {executed in 1 msec}
DEBUG 21-05-14 21:46:35[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:35.530', '05/14/2021 21:46:35.530', '', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:35[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:46:35[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:46:35[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:46:38[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:46:38[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:38.774', '05/14/2021 21:46:38.774', '', '6', '6')
 {executed in 1 msec}
DEBUG 21-05-14 21:46:38[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:38.774', '05/14/2021 21:46:38.774', '', '6', '6')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:38[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:46:38[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:46:38[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:46:42[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:46:42[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:42.781', '05/14/2021 21:46:42.781', '7', '7', '7')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:42[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:42.781', '05/14/2021 21:46:42.781', '7', '7', '7')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:42[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:46:42[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:46:42[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:46:48[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:46:48[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:48.521', '05/14/2021 21:46:48.521', '8', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:48[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:48.521', '05/14/2021 21:46:48.521', '8', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:48[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:46:48[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:46:48[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 2 msec}
DEBUG 21-05-14 21:46:52[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:46:52[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 2 msec}
DEBUG 21-05-14 21:46:52[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:46:52[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:46:56[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:46:56[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:56.137', '05/14/2021 21:46:56.137', '9', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:56[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:46:56.137', '05/14/2021 21:46:56.137', '9', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:46:56[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:46:56[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:46:56[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:00[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 3 msec}
DEBUG 21-05-14 21:47:00[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:00.072', '05/14/2021 21:47:00.072', '10', '10', '10')
 {executed in 1 msec}
DEBUG 21-05-14 21:47:00[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:00.072', '05/14/2021 21:47:00.072', '10', '10', '10')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:00[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:47:00[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:00[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:03[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:47:03[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:03.234', '05/14/2021 21:47:03.234', '11', '11', '11')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:03[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:03.234', '05/14/2021 21:47:03.234', '11', '11', '11')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:03[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:47:03[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:03[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:05[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:47:05[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:05.670', '05/14/2021 21:47:05.670', '2', '2', '2')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:05[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:05.670', '05/14/2021 21:47:05.670', '2', '2', '2')
 {executed in 1 msec}
DEBUG 21-05-14 21:47:05[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:47:05[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:05[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:08[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:47:08[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:08.300', '05/14/2021 21:47:08.300', '3', '3', '3')
 {executed in 1 msec}
DEBUG 21-05-14 21:47:08[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:08.300', '05/14/2021 21:47:08.300', '3', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:08[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:47:08[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:08[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:11[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:47:11[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:11.139', '05/14/2021 21:47:11.139', '4', '4', '4')
 {executed in 1 msec}
DEBUG 21-05-14 21:47:11[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:11.139', '05/14/2021 21:47:11.139', '4', '4', '4')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:47:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:13[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:47:13[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:13.641', '05/14/2021 21:47:13.641', '5', '5', '5')
 {executed in 1 msec}
DEBUG 21-05-14 21:47:13[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:13.641', '05/14/2021 21:47:13.641', '5', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:13[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:47:13[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:13[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:22[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:47:22[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:22.521', '05/14/2021 21:47:22.521', '6', '6', '6')
 {executed in 2 msec}
DEBUG 21-05-14 21:47:22[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:22.521', '05/14/2021 21:47:22.521', '6', '6', '6')
 {executed in 1 msec}
DEBUG 21-05-14 21:47:22[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:47:22[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:22[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:25[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:47:25[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:25.416', '05/14/2021 21:47:25.416', '7', '7', '7')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:25[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:25.416', '05/14/2021 21:47:25.416', '7', '7', '7')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:25[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:47:25[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:25[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:29[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:47:29[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:29.753', '05/14/2021 21:47:29.753', '8', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:29[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:29.753', '05/14/2021 21:47:29.753', '8', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:29[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:47:29[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:29[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:33[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:47:33[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:33.047', '05/14/2021 21:47:33.047', '9', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:33[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:33.047', '05/14/2021 21:47:33.047', '9', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:33[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:47:33[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:33[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:37[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:47:37[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:37.347', '05/14/2021 21:47:37.347', '10', '10', '10')
 {executed in 1 msec}
DEBUG 21-05-14 21:47:37[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:37.347', '05/14/2021 21:47:37.347', '10', '10', '10')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:37[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:47:37[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:37[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:38[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:47:38[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 16, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:47:38[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:38[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:39[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:47:39[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 8, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:47:39[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:39[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:47:53[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:47:53[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:53.762', '05/14/2021 21:47:53.762', '1', '1', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:53[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:47:53.762', '05/14/2021 21:47:53.762', '1', '1', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:47:53[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:47:53[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:47:53[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
ERROR 21-05-14 21:47:53[http-nio-8080-exec-4] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 5] with root cause
java.lang.ArrayIndexOutOfBoundsException: 5
	at org.gaiga.service.BoardService.getPageList(BoardService.java:110)
	at org.gaiga.service.BoardService$$FastClassBySpringCGLIB$$dd38e1d7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at org.gaiga.service.BoardService$$EnhancerBySpringCGLIB$$871fcdec.getPageList(<generated>)
	at org.gaiga.controller.BoardController.list(BoardController.java:40)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  21-05-14 21:50:57[RMI TCP Connection(4)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-05-14 21:50:57[RMI TCP Connection(4)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:50:57[RMI TCP Connection(4)-127.0.0.1] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:50:57[RMI TCP Connection(4)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-05-14 21:50:57[RMI TCP Connection(4)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-05-14 21:51:01[restartedMain] [BoardExampleApplication:55] - Starting BoardExampleApplication using Java 1.8.0_191 on kiddingui-MacBook-Pro.local with PID 16000 (/Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample/target/classes started by kidding in /Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample)
INFO  21-05-14 21:51:01[restartedMain] [BoardExampleApplication:675] - No active profile set, falling back to default profiles: default
INFO  21-05-14 21:51:01[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  21-05-14 21:51:01[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  21-05-14 21:51:02[restartedMain] [RepositoryConfigurationDelegate:128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  21-05-14 21:51:02[restartedMain] [RepositoryConfigurationDelegate:188] - Finished Spring Data repository scanning in 133 ms. Found 2 JPA repository interfaces.
DEBUG 21-05-14 21:51:03[restartedMain] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-05-14 21:51:03[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  21-05-14 21:51:03[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:51:03[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  21-05-14 21:51:03[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
INFO  21-05-14 21:51:04[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  21-05-14 21:51:04[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-05-14 21:51:04[restartedMain] [ServletWebServerApplicationContext:289] - Root WebApplicationContext: initialization completed in 2927 ms
INFO  21-05-14 21:51:04[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  21-05-14 21:51:04[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.4.30.Final
INFO  21-05-14 21:51:04[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  21-05-14 21:51:05[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
DEBUG 21-05-14 21:51:05[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:577)
1. SELECT 1
 {executed in 0 msec}
INFO  21-05-14 21:51:05[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  21-05-14 21:51:05[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
DEBUG 21-05-14 21:51:06[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:51:06[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. drop table if exists board
 {executed in 6 msec}
DEBUG 21-05-14 21:51:06[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. drop table if exists member
 {executed in 3 msec}
DEBUG 21-05-14 21:51:06[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. create table board (
       id bigint not null auto_increment,
        created_date datetime,
        modified_date datetime,
        content TEXT not null,
        title varchar(100) not null,
        writer varchar(10) not null,
        primary key (id)
    ) engine=InnoDB
 {executed in 22 msec}
DEBUG 21-05-14 21:51:06[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
1. create table member (
       mbr_no bigint not null auto_increment,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    ) engine=InnoDB
 {executed in 9 msec}
INFO  21-05-14 21:51:06[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  21-05-14 21:51:06[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:51:06[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
WARN  21-05-14 21:51:07[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  21-05-14 21:51:07[restartedMain] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:51:07[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  21-05-14 21:51:08[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:51:08[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  21-05-14 21:51:08[restartedMain] [BoardExampleApplication:61] - Started BoardExampleApplication in 8.151 seconds (JVM running for 9.372)
INFO  21-05-14 21:51:09[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-05-14 21:51:09[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-05-14 21:51:09[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 3 ms
DEBUG 21-05-14 21:51:09[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:51:09[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 2 msec}
DEBUG 21-05-14 21:51:09[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:52:30[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:52:30[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4, 4
 {executed in 0 msec}
DEBUG 21-05-14 21:52:30[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:30[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:52:32[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:52:32[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 8, 4
 {executed in 0 msec}
DEBUG 21-05-14 21:52:32[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:32[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:36[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:52:36[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:36.404', '05/14/2021 21:52:36.404', '1', '1', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:52:36[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:36.404', '05/14/2021 21:52:36.404', '1', '1', '1')
 {executed in 1 msec}
DEBUG 21-05-14 21:52:36[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:52:36[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:39[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:52:39[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:39.440', '05/14/2021 21:52:39.440', '', '2', '2')
 {executed in 1 msec}
DEBUG 21-05-14 21:52:39[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:39.440', '05/14/2021 21:52:39.440', '', '2', '2')
 {executed in 0 msec}
DEBUG 21-05-14 21:52:39[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:52:39[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:41[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:52:41[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:41.825', '05/14/2021 21:52:41.825', '', '3', '3')
 {executed in 2 msec}
DEBUG 21-05-14 21:52:41[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:41.825', '05/14/2021 21:52:41.825', '', '3', '3')
 {executed in 1 msec}
DEBUG 21-05-14 21:52:41[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:52:41[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:44[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:52:44[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:44.253', '05/14/2021 21:52:44.253', '', '4', '4')
 {executed in 0 msec}
DEBUG 21-05-14 21:52:44[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:44.253', '05/14/2021 21:52:44.253', '', '4', '4')
 {executed in 0 msec}
DEBUG 21-05-14 21:52:44[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:52:44[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:52:44[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:52:46[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:52:46[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:46.854', '05/14/2021 21:52:46.854', '', '5', '5')
 {executed in 1 msec}
DEBUG 21-05-14 21:52:46[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:46.854', '05/14/2021 21:52:46.854', '', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:52:46[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:52:46[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:46[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:49[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:52:49[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:49.768', '05/14/2021 21:52:49.768', '', '6', '6')
 {executed in 1 msec}
DEBUG 21-05-14 21:52:49[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:49.768', '05/14/2021 21:52:49.768', '', '6', '6')
 {executed in 0 msec}
DEBUG 21-05-14 21:52:49[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:52:49[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:52:49[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:52:52[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:52:52[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:52.794', '05/14/2021 21:52:52.794', '', '7', '7')
 {executed in 1 msec}
DEBUG 21-05-14 21:52:52[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:52.794', '05/14/2021 21:52:52.794', '', '7', '7')
 {executed in 0 msec}
DEBUG 21-05-14 21:52:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:52:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:52:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:56[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 4 msec}
DEBUG 21-05-14 21:52:56[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:56.361', '05/14/2021 21:52:56.361', '', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:52:56[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:56.361', '05/14/2021 21:52:56.361', '', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:52:56[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:52:56[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:56[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:52:59[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:52:59[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:59.135', '05/14/2021 21:52:59.135', '', '9', '9')
 {executed in 1 msec}
DEBUG 21-05-14 21:52:59[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:52:59.135', '05/14/2021 21:52:59.135', '', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:52:59[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:52:59[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:52:59[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:02[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:53:02[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:02.201', '05/14/2021 21:53:02.201', '', '10', '10')
 {executed in 1 msec}
DEBUG 21-05-14 21:53:02[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:02.201', '05/14/2021 21:53:02.201', '', '10', '10')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:02[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:53:02[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:02[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:04[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:53:04[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:04.862', '05/14/2021 21:53:04.862', '', '11', '1')
 {executed in 1 msec}
DEBUG 21-05-14 21:53:04[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:04.862', '05/14/2021 21:53:04.862', '', '11', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:04[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:53:04[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:04[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:07[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:53:07[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:07.809', '05/14/2021 21:53:07.809', '', '2', '2')
 {executed in 1 msec}
DEBUG 21-05-14 21:53:07[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:07.809', '05/14/2021 21:53:07.809', '', '2', '2')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:07[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:53:07[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:07[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:10[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:53:10[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:10.384', '05/14/2021 21:53:10.384', '', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:10[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:10.384', '05/14/2021 21:53:10.384', '', '3', '3')
 {executed in 1 msec}
DEBUG 21-05-14 21:53:10[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:53:10[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:10[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:12[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:53:12[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:12.844', '05/14/2021 21:53:12.844', '', '4', '4')
 {executed in 1 msec}
DEBUG 21-05-14 21:53:12[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:12.844', '05/14/2021 21:53:12.844', '', '4', '4')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:12[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:53:12[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:12[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:15[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 3 msec}
DEBUG 21-05-14 21:53:15[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:15.502', '05/14/2021 21:53:15.502', '', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:15[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:15.502', '05/14/2021 21:53:15.502', '', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:15[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:53:15[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:15[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:20[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:53:20[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:20.927', '05/14/2021 21:53:20.927', '', '6', '6')
 {executed in 1 msec}
DEBUG 21-05-14 21:53:20[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:20.927', '05/14/2021 21:53:20.927', '', '6', '6')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:20[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:53:20[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:20[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:23[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:53:23[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:23.854', '05/14/2021 21:53:23.854', '', '7', '7')
 {executed in 1 msec}
DEBUG 21-05-14 21:53:23[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:23.854', '05/14/2021 21:53:23.854', '', '7', '7')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:23[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:53:23[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:23[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:28[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:53:28[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:28.123', '05/14/2021 21:53:28.123', '', '8', '8')
 {executed in 1 msec}
DEBUG 21-05-14 21:53:28[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:28.123', '05/14/2021 21:53:28.123', '', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:28[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:53:28[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:28[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:29[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:53:29[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 16, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:53:29[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:30[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 3 msec}
DEBUG 21-05-14 21:53:30[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 8, 4
 {executed in 0 msec}
DEBUG 21-05-14 21:53:30[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:30[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:34[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:53:34[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:34.880', '05/14/2021 21:53:34.880', '', '9', '9')
 {executed in 1 msec}
DEBUG 21-05-14 21:53:34[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:34.880', '05/14/2021 21:53:34.880', '', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:34[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:53:34[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:34[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:39[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:53:39[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:39.067', '05/14/2021 21:53:39.067', '', '0', '0')
 {executed in 1 msec}
DEBUG 21-05-14 21:53:39[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
1. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:53:39.067', '05/14/2021 21:53:39.067', '', '0', '0')
 {executed in 0 msec}
DEBUG 21-05-14 21:53:39[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:53:39[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:39[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:42[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:53:42[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:53:42[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:42[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:44[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:53:44[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 8, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:53:44[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:53:44[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:50[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:53:50[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 12, 4
 {executed in 2 msec}
DEBUG 21-05-14 21:53:50[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:53:50[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:54:01[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 4 msec}
DEBUG 21-05-14 21:54:01[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 8, 4
 {executed in 0 msec}
DEBUG 21-05-14 21:54:01[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:54:01[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:54:03[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
1. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:54:03[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 12, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:54:03[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:54:03[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
INFO  21-05-14 21:55:44[Thread-6] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:55:44[Thread-6] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:55:44[Thread-6] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-05-14 21:55:44[Thread-6] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-05-14 21:55:44[restartedMain] [BoardExampleApplication:55] - Starting BoardExampleApplication using Java 1.8.0_191 on kiddingui-MacBook-Pro.local with PID 16000 (/Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample/target/classes started by kidding in /Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample)
INFO  21-05-14 21:55:44[restartedMain] [BoardExampleApplication:675] - No active profile set, falling back to default profiles: default
INFO  21-05-14 21:55:44[restartedMain] [RepositoryConfigurationDelegate:128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  21-05-14 21:55:44[restartedMain] [RepositoryConfigurationDelegate:188] - Finished Spring Data repository scanning in 10 ms. Found 2 JPA repository interfaces.
INFO  21-05-14 21:55:44[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  21-05-14 21:55:44[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:55:44[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  21-05-14 21:55:44[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
INFO  21-05-14 21:55:44[restartedMain] [TldScanner:173] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
INFO  21-05-14 21:55:44[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-05-14 21:55:44[restartedMain] [ServletWebServerApplicationContext:289] - Root WebApplicationContext: initialization completed in 458 ms
INFO  21-05-14 21:55:44[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  21-05-14 21:55:44[restartedMain] [HikariDataSource:110] - HikariPool-2 - Starting...
DEBUG 21-05-14 21:55:44[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:577)
11. SELECT 1
 {executed in 1 msec}
INFO  21-05-14 21:55:44[restartedMain] [HikariDataSource:123] - HikariPool-2 - Start completed.
INFO  21-05-14 21:55:44[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
DEBUG 21-05-14 21:55:45[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. drop table if exists board
 {executed in 4 msec}
DEBUG 21-05-14 21:55:45[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. drop table if exists member
 {executed in 2 msec}
DEBUG 21-05-14 21:55:45[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. create table board (
       id bigint not null auto_increment,
        created_date datetime,
        modified_date datetime,
        content TEXT not null,
        title varchar(100) not null,
        writer varchar(10) not null,
        primary key (id)
    ) engine=InnoDB
 {executed in 13 msec}
DEBUG 21-05-14 21:55:45[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
11. create table member (
       mbr_no bigint not null auto_increment,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    ) engine=InnoDB
 {executed in 8 msec}
INFO  21-05-14 21:55:45[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  21-05-14 21:55:45[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:55:45[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
WARN  21-05-14 21:55:45[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  21-05-14 21:55:45[restartedMain] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:55:45[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  21-05-14 21:55:45[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  21-05-14 21:55:45[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  21-05-14 21:55:45[restartedMain] [BoardExampleApplication:61] - Started BoardExampleApplication in 1.089 seconds (JVM running for 286.662)
INFO  21-05-14 21:55:45[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  21-05-14 21:55:47[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-05-14 21:55:47[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-05-14 21:55:47[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
DEBUG 21-05-14 21:55:47[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:55:47[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:55:47[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:55:50[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:55:50[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:55:50.958', '05/14/2021 21:55:50.958', '', '1', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:55:50[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:55:50.958', '05/14/2021 21:55:50.958', '', '1', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:55:50[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:55:50[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:55:53[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:55:53[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:55:53.606', '05/14/2021 21:55:53.606', '', '2', '2')
 {executed in 1 msec}
DEBUG 21-05-14 21:55:53[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:55:53.606', '05/14/2021 21:55:53.606', '', '2', '2')
 {executed in 0 msec}
DEBUG 21-05-14 21:55:53[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:55:53[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:55:56[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:55:56[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:55:56.562', '05/14/2021 21:55:56.562', '', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:55:56[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:55:56.562', '05/14/2021 21:55:56.562', '', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:55:56[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:55:56[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:55:59[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:55:59[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:55:59.437', '05/14/2021 21:55:59.437', '', '4', '4')
 {executed in 1 msec}
DEBUG 21-05-14 21:55:59[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:55:59.437', '05/14/2021 21:55:59.437', '', '4', '4')
 {executed in 0 msec}
DEBUG 21-05-14 21:55:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:55:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:55:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:02[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:56:02[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:02.210', '05/14/2021 21:56:02.210', '', '5', '5')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:02[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:02.210', '05/14/2021 21:56:02.210', '', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:02[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:56:02[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:02[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:05[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:56:05[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:05.460', '05/14/2021 21:56:05.460', '', '6', '6')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:05[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:05.460', '05/14/2021 21:56:05.460', '', '6', '6')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:05[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:56:05[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:05[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:08[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:56:08[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:08.514', '05/14/2021 21:56:08.514', '', '7', '7')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:08[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:08.514', '05/14/2021 21:56:08.514', '', '7', '7')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:08[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:56:08[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:08[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:11[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:56:11[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:11.457', '05/14/2021 21:56:11.457', '', '8', '8')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:11[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:11.457', '05/14/2021 21:56:11.457', '', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:11[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:56:11[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:11[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:15[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:56:15[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:15.112', '05/14/2021 21:56:15.112', '', '9', '9')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:15[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:15.112', '05/14/2021 21:56:15.112', '', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:15[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:56:15[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:15[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:18[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:56:18[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:18.056', '05/14/2021 21:56:18.056', '', '11', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:18[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:18.056', '05/14/2021 21:56:18.056', '', '11', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:18[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:56:18[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:18[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:20[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:56:20[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:20.892', '05/14/2021 21:56:20.892', '', '2', '2')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:20[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:20.892', '05/14/2021 21:56:20.892', '', '2', '2')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:20[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:56:20[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:20[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:23[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:56:23[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:23.601', '05/14/2021 21:56:23.601', '', '3', '3')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:23[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:23.601', '05/14/2021 21:56:23.601', '', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:23[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:56:23[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:23[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:26[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:56:26[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:26.036', '05/14/2021 21:56:26.036', '', '4', '4')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:26[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:26.036', '05/14/2021 21:56:26.036', '', '4', '4')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:26[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:56:26[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:26[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:28[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:56:28[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:28.649', '05/14/2021 21:56:28.649', '', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:28[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:28.649', '05/14/2021 21:56:28.649', '', '5', '5')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:28[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:56:28[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:28[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:31[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:56:31[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:31.130', '05/14/2021 21:56:31.130', '', '6', '6')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:31[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:31.130', '05/14/2021 21:56:31.130', '', '6', '6')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:31[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 1 msec}
DEBUG 21-05-14 21:56:31[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:31[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:34[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:56:34[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:34.404', '05/14/2021 21:56:34.404', '', '7', '7')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:34[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:34.404', '05/14/2021 21:56:34.404', '', '7', '7')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:34[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:56:34[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:34[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:37[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:56:37[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:37.762', '05/14/2021 21:56:37.762', '', '8', '8')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:37[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:37.762', '05/14/2021 21:56:37.762', '', '8', '8')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:37[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:56:37[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:37[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:41[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:56:41[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:41.762', '05/14/2021 21:56:41.762', '', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:41[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:41.762', '05/14/2021 21:56:41.762', '', '9', '9')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:56:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:44[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:56:44[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:44.857', '05/14/2021 21:56:44.857', '', '1', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:44[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:44.857', '05/14/2021 21:56:44.857', '', '1', '1')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:44[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:56:44[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:44[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:49[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:56:49[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:49.100', '05/14/2021 21:56:49.100', '', '2', '2')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:49[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:49.100', '05/14/2021 21:56:49.100', '', '2', '2')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:49[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:56:49[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:49[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:53[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 1 msec}
DEBUG 21-05-14 21:56:53[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:53.352', '05/14/2021 21:56:53.352', '', '3', '3')
 {executed in 1 msec}
DEBUG 21-05-14 21:56:53[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:230)
11. getGeneratedKeys on query: /* insert org.gaiga.domain.entity.Board */ insert into board (created_date, modified_date, content, title, writer) values ('05/14/2021 21:56:53.352', '05/14/2021 21:56:53.352', '', '3', '3')
 {executed in 0 msec}
DEBUG 21-05-14 21:56:53[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 0 msec}
DEBUG 21-05-14 21:56:53[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:53[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:56:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 0 msec}
DEBUG 21-05-14 21:56:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4, 4
 {executed in 1 msec}
DEBUG 21-05-14 21:56:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:56:59[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
DEBUG 21-05-14 21:57:02[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
11. SELECT 1
 {executed in 2 msec}
DEBUG 21-05-14 21:57:02[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select generatedAlias0 from Board as generatedAlias0 order by generatedAlias0.createdDate desc */ select board0_.id as id1_0_, board0_.created_date as created_2_0_, board0_.modified_date as modified3_0_, board0_.content as content4_0_, board0_.title as title5_0_, board0_.writer as writer6_0_ from board board0_ order by board0_.created_date desc limit 4
 {executed in 2 msec}
DEBUG 21-05-14 21:57:02[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(generatedAlias0) from Board as generatedAlias0 */ select count(board0_.id) as col_0_0_ from board board0_
 {executed in 1 msec}
DEBUG 21-05-14 21:57:02[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. /* select count(*) from Board x */ select count(*) as col_0_0_ from board board0_
 {executed in 0 msec}
INFO  21-05-14 21:57:11[Thread-10] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:57:11[Thread-10] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:57:11[Thread-10] [HikariDataSource:350] - HikariPool-2 - Shutdown initiated...
INFO  21-05-14 21:57:11[Thread-10] [HikariDataSource:352] - HikariPool-2 - Shutdown completed.
INFO  21-05-14 21:57:11[restartedMain] [BoardExampleApplication:55] - Starting BoardExampleApplication using Java 1.8.0_191 on kiddingui-MacBook-Pro.local with PID 16000 (/Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample/target/classes started by kidding in /Users/kidding/Documents/workspace-spring-tool-suite-4-4.6.1.RELEASE/boardExample)
INFO  21-05-14 21:57:11[restartedMain] [BoardExampleApplication:675] - No active profile set, falling back to default profiles: default
INFO  21-05-14 21:57:12[restartedMain] [RepositoryConfigurationDelegate:128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  21-05-14 21:57:12[restartedMain] [RepositoryConfigurationDelegate:188] - Finished Spring Data repository scanning in 17 ms. Found 2 JPA repository interfaces.
INFO  21-05-14 21:57:12[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  21-05-14 21:57:12[restartedMain] [ServletWebServerApplicationContext:289] - Root WebApplicationContext: initialization completed in 737 ms
INFO  21-05-14 21:57:12[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  21-05-14 21:57:12[restartedMain] [HikariDataSource:110] - HikariPool-3 - Starting...
DEBUG 21-05-14 21:57:12[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:577)
21. SELECT 1
 {executed in 0 msec}
INFO  21-05-14 21:57:12[restartedMain] [HikariDataSource:123] - HikariPool-3 - Start completed.
INFO  21-05-14 21:57:12[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
DEBUG 21-05-14 21:57:12[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
21. drop table if exists board
 {executed in 2 msec}
DEBUG 21-05-14 21:57:12[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
21. drop table if exists member
 {executed in 2 msec}
DEBUG 21-05-14 21:57:12[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
21. create table board (
       id bigint not null auto_increment,
        created_date datetime,
        modified_date datetime,
        content TEXT not null,
        title varchar(100) not null,
        writer varchar(10) not null,
        primary key (id)
    ) engine=InnoDB
 {executed in 11 msec}
DEBUG 21-05-14 21:57:12[restartedMain] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
21. create table member (
       mbr_no bigint not null auto_increment,
        id varchar(255),
        name varchar(255),
        primary key (mbr_no)
    ) engine=InnoDB
 {executed in 7 msec}
INFO  21-05-14 21:57:12[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  21-05-14 21:57:12[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:57:12[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
WARN  21-05-14 21:57:13[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  21-05-14 21:57:13[restartedMain] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:57:13[restartedMain] [WelcomePageHandlerMapping:53] - Adding welcome page: class path resource [static/index.html]
INFO  21-05-14 21:57:13[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  21-05-14 21:57:13[restartedMain] [BoardExampleApplication:61] - Started BoardExampleApplication in 1.437 seconds (JVM running for 374.508)
INFO  21-05-14 21:57:13[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  21-05-14 21:57:13[SpringContextShutdownHook] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-05-14 21:57:13[SpringContextShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  21-05-14 21:57:13[SpringContextShutdownHook] [HikariDataSource:350] - HikariPool-3 - Shutdown initiated...
INFO  21-05-14 21:57:13[SpringContextShutdownHook] [HikariDataSource:352] - HikariPool-3 - Shutdown completed.
